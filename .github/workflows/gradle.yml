name: Java CI with Gradle

on:
  pull_request:
    branches: ["develop"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Run unit tests
        run: ./gradlew test

      - name: Run integration tests
        run: ./gradlew integrationTest

      # verifica si el codigo sigue reglas de formateo
      # si no las sigue, genera error
      - name: Check code formatting
        run: ./gradlew spotlessCheck

      # aplica el formateo del codigo automaticamente
      - name: Format code
        run: ./gradlew spotlessApply

      - name: Check code quality with Linter
        run: ./gradlew check

      # despliegue con firebase:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install
        working-directory: ../frontend/my-angular-app

      - name: Build frontend
        run: npm run build --configuration production
        working-directory: ../frontend/my-angular-app

      - name: Deploy to Firebase Hosting
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo $FIREBASE_SERVICE_ACCOUNT > firebase-key.json
          firebase deploy --token "$(cat firebase-key.json)"